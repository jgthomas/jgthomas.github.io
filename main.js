/*! For license information please see main.js.LICENSE.txt */
(()=>{var n={44:(n,e,t)=>{"use strict";t.d(e,{Z:()=>A});var i=t(15),a=t.n(i),o=t(645),r=t.n(o)()(a());r.push([n.id,'html,body{margin:0;padding:0;font-size:16px;font-family:"Chivo",sans-serif;font-family:"Source Sans Pro",sans-serif;background-color:#6495ed}.full-width{width:65%;margin:auto;margin-top:0;background-color:#f5f5f5;border-radius:0 0 2% 2%;padding:1%;margin-bottom:2%;font-weight:400}nav{text-align:center;margin-top:2em}nav a{text-decoration:none;outline:none;color:dimgray;padding:1%}.key-grid{display:grid;grid-template-columns:1fr;grid-template-rows:1fr;grid-column-gap:1%;align-items:center;justify-items:center;justify-content:space-evenly;text-align:center;margin-top:1em}.hidden{position:absolute;overflow:hidden;clip:rect(0 0 0 0);height:1px;width:1px;margin:-1px;padding:0;border:0}.heading{text-align:center;font-weight:400;margin-bottom:0;color:#1e90ff}.profile-text{color:dimgray;min-width:80%;max-width:80%;margin:auto;text-align:left}@media only screen and (min-width: 2300px){.full-width{width:45%}.profile-text{min-width:60%;max-width:60%}}@media only screen and (min-width: 1281px){.profile-text{min-width:60%;max-width:60%}}@media only screen and (min-width: 1025px)and (max-width: 1280px){.full-width{width:90%}.profile-text{min-width:60%;max-width:60%}}@media only screen and (min-width: 768px)and (max-width: 1024px){.full-width{width:75%}}@media only screen and (min-width: 768px)and (max-width: 1024px)and (orientation: landscape){.full-width{width:90%}}@media only screen and (min-width: 481px)and (max-width: 767px){.full-width{width:95%}}@media only screen and (min-width: 320px)and (max-width: 480px){.full-width{width:95%}}@media only screen and (min-width: 320px)and (max-width: 401px){.full-width{width:90%}}nav a:hover{color:#1e90ff}',"",{version:3,sources:["webpack://./src/scss/index.scss","webpack://./src/scss/_layouts.scss"],names:[],mappings:"AAUA,UAEE,QAAA,CACA,SAAA,CACA,cAAA,CACA,8BAAA,CACA,wCAAA,CACA,wBAfsB,CAkBxB,YACE,SAAA,CACA,WAAA,CACA,YAAA,CACA,wBArBqB,CAsBrB,uBAAA,CACA,UAAA,CACA,gBAAA,CACA,eAAA,CAGF,IACE,iBAAA,CACA,cAAA,CAEA,MACE,oBAAA,CACA,YAAA,CACA,aAhCkB,CAiClB,UAAA,CAIJ,UACE,YAAA,CACA,yBAAA,CACA,sBAAA,CACA,kBAAA,CACA,kBAAA,CACA,oBAAA,CACA,4BAAA,CACA,iBAAA,CACA,cAAA,CAGF,QACE,iBAAA,CACA,eAAA,CACA,kBAAA,CACA,UAAA,CACA,SAAA,CACA,WAAA,CACA,SAAA,CACA,QAAA,CAGF,SACE,iBAAA,CACA,eAAA,CACA,eAAA,CACA,aAlEc,CAqEhB,cACE,aApEoB,CAqEpB,aAAA,CACA,aAAA,CACA,WAAA,CACA,eAAA,CC5EE,2CDgFF,YACE,SAAA,CAEF,cACE,aAAA,CACA,aAAA,CAAA,CC/EA,2CDoFF,cACE,aAAA,CACA,aAAA,CAAA,CChFA,kEDqFF,YACE,SAAA,CAEF,cACE,aAAA,CACA,aAAA,CAAA,CCpFA,iEDyFF,YACE,SAAA,CAAA,CCpFA,6FDyFF,YACE,SAAA,CAAA,CCpFA,gEDyFF,YACE,SAAA,CAAA,CCpFA,gEDyFF,YACE,SAAA,CAAA,CCpFA,gEDyFF,YACE,SAAA,CAAA,CAMA,YACE,aAzIU",sourcesContent:["@import 'layouts';\n\n$page-background-color: cornflowerblue;\n$box-background-color: whitesmoke;\n$heading-color: dodgerblue;\n\n$standard-text-color: dimgrey;\n$standard-text-color-dark: darkslategrey;\n$highlight-text-color: cornflowerblue;\n\nhtml,\nbody {\n  margin: 0;\n  padding: 0;\n  font-size: 16px;\n  font-family: 'Chivo', sans-serif;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: $page-background-color;\n}\n\n.full-width {\n  width: 65%;\n  margin: auto;\n  margin-top: 0;\n  background-color: $box-background-color;\n  border-radius: 0 0 2% 2%;\n  padding: 1%;\n  margin-bottom: 2%;\n  font-weight: 400;\n}\n\nnav {\n  text-align: center;\n  margin-top: 2em;\n\n  a {\n    text-decoration: none;\n    outline: none;\n    color: $standard-text-color;\n    padding: 1%;\n  }\n}\n\n.key-grid {\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr;\n  grid-column-gap: 1%;\n  align-items: center;\n  justify-items: center;\n  justify-content: space-evenly;\n  text-align: center;\n  margin-top: 1em;\n}\n\n.hidden {\n  position: absolute;\n  overflow: hidden;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  width: 1px;\n  margin: -1px;\n  padding: 0;\n  border: 0;\n}\n\n.heading {\n  text-align: center;\n  font-weight: 400;\n  margin-bottom: 0;\n  color: $heading-color;\n}\n\n.profile-text {\n  color: $standard-text-color;\n  min-width: 80%;\n  max-width: 80%;\n  margin: auto;\n  text-align: left;\n}\n\n@include respond(widescreen) {\n  .full-width {\n    width: 45%;\n  }\n  .profile-text {\n    min-width: 60%;\n    max-width: 60%;\n  }\n}\n\n@include respond(desktop) {\n  .profile-text {\n    min-width: 60%;\n    max-width: 60%;\n  }\n}\n\n@include respond(laptop) {\n  .full-width {\n    width: 90%;\n  }\n  .profile-text {\n    min-width: 60%;\n    max-width: 60%;\n  }\n}\n\n@include respond(tablet) {\n  .full-width {\n    width: 75%;\n  }\n}\n\n@include respond(tabletLandscape) {\n  .full-width {\n    width: 90%;\n  }\n}\n\n@include respond(mobileLarge) {\n  .full-width {\n    width: 95%;\n  }\n}\n\n@include respond(mobileSmall) {\n  .full-width {\n    width: 95%;\n  }\n}\n\n@include respond(mobileTiny) {\n  .full-width {\n    width: 90%;\n  }\n}\n\n@include feature(hover) {\n  nav {\n    a:hover {\n      color: $heading-color;\n    }\n  }\n}\n","@mixin respond($breakpoint) {\n  @if $breakpoint==widescreen {\n    @media only screen and (min-width: 2300px) {\n      @content;\n    }\n  }\n\n  @if $breakpoint==desktop {\n    @media only screen and (min-width: 1281px) {\n      @content;\n    }\n  }\n\n  @if $breakpoint==laptop {\n    @media only screen and (min-width: 1025px) and (max-width: 1280px) {\n      @content;\n    }\n  }\n\n  @if $breakpoint==tablet {\n    @media only screen and (min-width: 768px) and (max-width: 1024px) {\n      @content;\n    }\n  }\n\n  @if $breakpoint==tabletLandscape {\n    @media only screen and (min-width: 768px) and (max-width: 1024px) and (orientation: landscape) {\n      @content;\n    }\n  }\n\n  @if $breakpoint==mobileLarge {\n    @media only screen and (min-width: 481px) and (max-width: 767px) {\n      @content;\n    }\n  }\n\n  @if $breakpoint==mobileSmall {\n    @media only screen and (min-width: 320px) and (max-width: 480px) {\n      @content;\n    }\n  }\n\n  @if $breakpoint==mobileTiny {\n    @media only screen and (min-width: 320px) and (max-width: 401px) {\n      @content;\n    }\n  }\n}\n\n@mixin feature($feature) {\n  @if $feature==hover {\n    @content;\n  }\n}\n"],sourceRoot:""}]);const A=r},324:(n,e,t)=>{"use strict";t.d(e,{Z:()=>A});var i=t(15),a=t.n(i),o=t(645),r=t.n(o)()(a());r.push([n.id,'html,body{margin:0;padding:0;font-size:16px;font-family:"Chivo",sans-serif;font-family:"Source Sans Pro",sans-serif;background-color:#6495ed}.full-width{width:65%;margin:auto;margin-top:0;background-color:#f5f5f5;border-radius:0 0 2% 2%;padding:1%;margin-bottom:2%;font-weight:400}nav{text-align:center;margin-top:2em}nav a{text-decoration:none;outline:none;color:dimgray;padding:1%}.key-grid{display:grid;grid-template-columns:1fr;grid-template-rows:1fr;grid-column-gap:1%;align-items:center;justify-items:center;justify-content:space-evenly;text-align:center;margin-top:1em}.hidden{position:absolute;overflow:hidden;clip:rect(0 0 0 0);height:1px;width:1px;margin:-1px;padding:0;border:0}.heading{text-align:center;font-weight:400;margin-bottom:0;color:#1e90ff}.profile-text{color:dimgray;min-width:80%;max-width:80%;margin:auto;text-align:left}@media only screen and (min-width: 2300px){.full-width{width:45%}.profile-text{min-width:60%;max-width:60%}}@media only screen and (min-width: 1281px){.profile-text{min-width:60%;max-width:60%}}@media only screen and (min-width: 1025px)and (max-width: 1280px){.full-width{width:90%}.profile-text{min-width:60%;max-width:60%}}@media only screen and (min-width: 768px)and (max-width: 1024px){.full-width{width:75%}}@media only screen and (min-width: 768px)and (max-width: 1024px)and (orientation: landscape){.full-width{width:90%}}@media only screen and (min-width: 481px)and (max-width: 767px){.full-width{width:95%}}@media only screen and (min-width: 320px)and (max-width: 480px){.full-width{width:95%}}@media only screen and (min-width: 320px)and (max-width: 401px){.full-width{width:90%}}nav a:hover{color:#1e90ff}.main-grid-me{margin-top:1em;display:grid;grid-template-columns:1fr;grid-template-rows:1fr;grid-row-gap:1%}.lang-intro{margin-bottom:3em}.lang{margin-bottom:2.5em}.tool-icon-list{text-align:center}.tool-icon{display:inline-block;margin-left:auto;margin-right:auto}.me-links{display:flex;flex-direction:row;justify-content:space-around}.tooling-title{color:#6495ed}',"",{version:3,sources:["webpack://./src/scss/index.scss","webpack://./src/scss/_layouts.scss","webpack://./src/scss/me.scss"],names:[],mappings:"AAUA,UAEE,QAAA,CACA,SAAA,CACA,cAAA,CACA,8BAAA,CACA,wCAAA,CACA,wBAfsB,CAkBxB,YACE,SAAA,CACA,WAAA,CACA,YAAA,CACA,wBArBqB,CAsBrB,uBAAA,CACA,UAAA,CACA,gBAAA,CACA,eAAA,CAGF,IACE,iBAAA,CACA,cAAA,CAEA,MACE,oBAAA,CACA,YAAA,CACA,aAhCkB,CAiClB,UAAA,CAIJ,UACE,YAAA,CACA,yBAAA,CACA,sBAAA,CACA,kBAAA,CACA,kBAAA,CACA,oBAAA,CACA,4BAAA,CACA,iBAAA,CACA,cAAA,CAGF,QACE,iBAAA,CACA,eAAA,CACA,kBAAA,CACA,UAAA,CACA,SAAA,CACA,WAAA,CACA,SAAA,CACA,QAAA,CAGF,SACE,iBAAA,CACA,eAAA,CACA,eAAA,CACA,aAlEc,CAqEhB,cACE,aApEoB,CAqEpB,aAAA,CACA,aAAA,CACA,WAAA,CACA,eAAA,CC5EE,2CDgFF,YACE,SAAA,CAEF,cACE,aAAA,CACA,aAAA,CAAA,CC/EA,2CDoFF,cACE,aAAA,CACA,aAAA,CAAA,CChFA,kEDqFF,YACE,SAAA,CAEF,cACE,aAAA,CACA,aAAA,CAAA,CCpFA,iEDyFF,YACE,SAAA,CAAA,CCpFA,6FDyFF,YACE,SAAA,CAAA,CCpFA,gEDyFF,YACE,SAAA,CAAA,CCpFA,gEDyFF,YACE,SAAA,CAAA,CCpFA,gEDyFF,YACE,SAAA,CAAA,CAMA,YACE,aAzIU,CEFhB,cACE,cAAA,CACA,YAAA,CACA,yBAAA,CACA,sBAAA,CACA,eAAA,CAGF,YACE,iBAAA,CAGF,MACE,mBAAA,CAGF,gBACE,iBAAA,CAGF,WACE,oBAAA,CACA,gBAAA,CACA,iBAAA,CAGF,UACE,YAAA,CACA,kBAAA,CACA,4BAAA,CAGF,eACE,aF3BqB",sourcesContent:["@import 'layouts';\n\n$page-background-color: cornflowerblue;\n$box-background-color: whitesmoke;\n$heading-color: dodgerblue;\n\n$standard-text-color: dimgrey;\n$standard-text-color-dark: darkslategrey;\n$highlight-text-color: cornflowerblue;\n\nhtml,\nbody {\n  margin: 0;\n  padding: 0;\n  font-size: 16px;\n  font-family: 'Chivo', sans-serif;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: $page-background-color;\n}\n\n.full-width {\n  width: 65%;\n  margin: auto;\n  margin-top: 0;\n  background-color: $box-background-color;\n  border-radius: 0 0 2% 2%;\n  padding: 1%;\n  margin-bottom: 2%;\n  font-weight: 400;\n}\n\nnav {\n  text-align: center;\n  margin-top: 2em;\n\n  a {\n    text-decoration: none;\n    outline: none;\n    color: $standard-text-color;\n    padding: 1%;\n  }\n}\n\n.key-grid {\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr;\n  grid-column-gap: 1%;\n  align-items: center;\n  justify-items: center;\n  justify-content: space-evenly;\n  text-align: center;\n  margin-top: 1em;\n}\n\n.hidden {\n  position: absolute;\n  overflow: hidden;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  width: 1px;\n  margin: -1px;\n  padding: 0;\n  border: 0;\n}\n\n.heading {\n  text-align: center;\n  font-weight: 400;\n  margin-bottom: 0;\n  color: $heading-color;\n}\n\n.profile-text {\n  color: $standard-text-color;\n  min-width: 80%;\n  max-width: 80%;\n  margin: auto;\n  text-align: left;\n}\n\n@include respond(widescreen) {\n  .full-width {\n    width: 45%;\n  }\n  .profile-text {\n    min-width: 60%;\n    max-width: 60%;\n  }\n}\n\n@include respond(desktop) {\n  .profile-text {\n    min-width: 60%;\n    max-width: 60%;\n  }\n}\n\n@include respond(laptop) {\n  .full-width {\n    width: 90%;\n  }\n  .profile-text {\n    min-width: 60%;\n    max-width: 60%;\n  }\n}\n\n@include respond(tablet) {\n  .full-width {\n    width: 75%;\n  }\n}\n\n@include respond(tabletLandscape) {\n  .full-width {\n    width: 90%;\n  }\n}\n\n@include respond(mobileLarge) {\n  .full-width {\n    width: 95%;\n  }\n}\n\n@include respond(mobileSmall) {\n  .full-width {\n    width: 95%;\n  }\n}\n\n@include respond(mobileTiny) {\n  .full-width {\n    width: 90%;\n  }\n}\n\n@include feature(hover) {\n  nav {\n    a:hover {\n      color: $heading-color;\n    }\n  }\n}\n","@mixin respond($breakpoint) {\n  @if $breakpoint==widescreen {\n    @media only screen and (min-width: 2300px) {\n      @content;\n    }\n  }\n\n  @if $breakpoint==desktop {\n    @media only screen and (min-width: 1281px) {\n      @content;\n    }\n  }\n\n  @if $breakpoint==laptop {\n    @media only screen and (min-width: 1025px) and (max-width: 1280px) {\n      @content;\n    }\n  }\n\n  @if $breakpoint==tablet {\n    @media only screen and (min-width: 768px) and (max-width: 1024px) {\n      @content;\n    }\n  }\n\n  @if $breakpoint==tabletLandscape {\n    @media only screen and (min-width: 768px) and (max-width: 1024px) and (orientation: landscape) {\n      @content;\n    }\n  }\n\n  @if $breakpoint==mobileLarge {\n    @media only screen and (min-width: 481px) and (max-width: 767px) {\n      @content;\n    }\n  }\n\n  @if $breakpoint==mobileSmall {\n    @media only screen and (min-width: 320px) and (max-width: 480px) {\n      @content;\n    }\n  }\n\n  @if $breakpoint==mobileTiny {\n    @media only screen and (min-width: 320px) and (max-width: 401px) {\n      @content;\n    }\n  }\n}\n\n@mixin feature($feature) {\n  @if $feature==hover {\n    @content;\n  }\n}\n","@use 'index';\n\n.main-grid-me {\n  margin-top: 1em;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr;\n  grid-row-gap: 1%;\n}\n\n.lang-intro {\n  margin-bottom: 3em;\n}\n\n.lang {\n  margin-bottom: 2.5em;\n}\n\n.tool-icon-list {\n  text-align: center;\n}\n\n.tool-icon {\n  display: inline-block;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.me-links {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n}\n\n.tooling-title {\n  color: index.$highlight-text-color;\n}\n"],sourceRoot:""}]);const A=r},984:(n,e,t)=>{"use strict";t.d(e,{Z:()=>A});var i=t(15),a=t.n(i),o=t(645),r=t.n(o)()(a());r.push([n.id,'html,body{margin:0;padding:0;font-size:16px;font-family:"Chivo",sans-serif;font-family:"Source Sans Pro",sans-serif;background-color:#6495ed}.full-width{width:65%;margin:auto;margin-top:0;background-color:#f5f5f5;border-radius:0 0 2% 2%;padding:1%;margin-bottom:2%;font-weight:400}nav{text-align:center;margin-top:2em}nav a{text-decoration:none;outline:none;color:dimgray;padding:1%}.key-grid{display:grid;grid-template-columns:1fr;grid-template-rows:1fr;grid-column-gap:1%;align-items:center;justify-items:center;justify-content:space-evenly;text-align:center;margin-top:1em}.hidden{position:absolute;overflow:hidden;clip:rect(0 0 0 0);height:1px;width:1px;margin:-1px;padding:0;border:0}.heading{text-align:center;font-weight:400;margin-bottom:0;color:#1e90ff}.profile-text{color:dimgray;min-width:80%;max-width:80%;margin:auto;text-align:left}@media only screen and (min-width: 2300px){.full-width{width:45%}.profile-text{min-width:60%;max-width:60%}}@media only screen and (min-width: 1281px){.profile-text{min-width:60%;max-width:60%}}@media only screen and (min-width: 1025px)and (max-width: 1280px){.full-width{width:90%}.profile-text{min-width:60%;max-width:60%}}@media only screen and (min-width: 768px)and (max-width: 1024px){.full-width{width:75%}}@media only screen and (min-width: 768px)and (max-width: 1024px)and (orientation: landscape){.full-width{width:90%}}@media only screen and (min-width: 481px)and (max-width: 767px){.full-width{width:95%}}@media only screen and (min-width: 320px)and (max-width: 480px){.full-width{width:95%}}@media only screen and (min-width: 320px)and (max-width: 401px){.full-width{width:90%}}nav a:hover{color:#1e90ff}.main-grid-project{margin-top:0em;display:grid;grid-template-columns:1fr;grid-template-rows:1fr;grid-row-gap:1%;grid-template-areas:"projects"}.project-grid{display:grid;grid-area:projects;grid-template-columns:1fr 1fr;grid-column-gap:1%;align-items:center;justify-items:center;justify-content:space-evenly;width:80%;margin:auto;text-align:center;margin-bottom:1em}.key-items{display:flex;flex-direction:row;justify-content:space-around;color:#2f4f4f;text-align:center;width:100%;margin-top:1em}.project{display:grid;grid-template-columns:1fr;background-color:#f5f5f5;border-radius:2%;min-width:95%;max-width:95%;margin-top:20px;align-self:stretch}.title-line{display:flex;flex-direction:row;width:90%;margin:auto;justify-content:space-around;margin-top:20px}.status-light{margin-right:auto;font-size:larger;width:10%}.project-title{font-size:150%;margin-right:auto;margin-left:auto;color:#1e90ff}.description{color:dimgray;width:80%;font-size:larger;margin:auto}.detail{font-size:90%}.tech-used{color:dimgray;width:70%;margin:auto;text-align:left;font-size:100%;font-weight:400}.status-line{align-self:end;color:#2f4f4f;font-size:large;margin-top:20px;display:flex;flex-direction:row;justify-content:space-around}.link-image{width:26px}.uses-title{color:#6495ed}.feature-list{width:50%;margin:auto;text-align:left;font-size:90%}.project-image{max-width:50%;height:auto;padding:20px;margin:auto}.active{color:#2dc937}.archived{color:#e7b416}.retired{color:#a9a9a9}@media only screen and (min-width: 2300px){.project-grid{min-width:50%;max-width:50%}}@media only screen and (min-width: 1025px)and (max-width: 1280px){.project-grid{min-width:95%;max-width:95%}}@media only screen and (min-width: 768px)and (max-width: 1024px){.project-grid{min-width:95%;max-width:95%;grid-template-columns:1fr}.project{min-width:80%;max-width:80%}}@media only screen and (min-width: 768px)and (max-width: 1024px)and (orientation: landscape){.project-grid{min-width:95%;max-width:95%;grid-template-columns:1fr}.feature-list{width:80%}}@media only screen and (min-width: 481px)and (max-width: 767px){.project-grid{min-width:100%;max-width:100%;grid-template-columns:1fr}.project{min-width:95%;max-width:95%}.feature-list{width:70%}}@media only screen and (min-width: 320px)and (max-width: 480px){.project-grid{min-width:100%;max-width:100%;grid-template-columns:1fr}.project{min-width:95%;max-width:95%}.feature-list{width:70%}}@media only screen and (min-width: 320px)and (max-width: 401px){.project-grid{min-width:100%;max-width:100%;grid-template-columns:1fr}.project{min-width:90%;max-width:90%}.feature-list{width:80%}}',"",{version:3,sources:["webpack://./src/scss/index.scss","webpack://./src/scss/_layouts.scss","webpack://./src/scss/projects.scss"],names:[],mappings:"AAUA,UAEE,QAAA,CACA,SAAA,CACA,cAAA,CACA,8BAAA,CACA,wCAAA,CACA,wBAfsB,CAkBxB,YACE,SAAA,CACA,WAAA,CACA,YAAA,CACA,wBArBqB,CAsBrB,uBAAA,CACA,UAAA,CACA,gBAAA,CACA,eAAA,CAGF,IACE,iBAAA,CACA,cAAA,CAEA,MACE,oBAAA,CACA,YAAA,CACA,aAhCkB,CAiClB,UAAA,CAIJ,UACE,YAAA,CACA,yBAAA,CACA,sBAAA,CACA,kBAAA,CACA,kBAAA,CACA,oBAAA,CACA,4BAAA,CACA,iBAAA,CACA,cAAA,CAGF,QACE,iBAAA,CACA,eAAA,CACA,kBAAA,CACA,UAAA,CACA,SAAA,CACA,WAAA,CACA,SAAA,CACA,QAAA,CAGF,SACE,iBAAA,CACA,eAAA,CACA,eAAA,CACA,aAlEc,CAqEhB,cACE,aApEoB,CAqEpB,aAAA,CACA,aAAA,CACA,WAAA,CACA,eAAA,CC5EE,2CDgFF,YACE,SAAA,CAEF,cACE,aAAA,CACA,aAAA,CAAA,CC/EA,2CDoFF,cACE,aAAA,CACA,aAAA,CAAA,CChFA,kEDqFF,YACE,SAAA,CAEF,cACE,aAAA,CACA,aAAA,CAAA,CCpFA,iEDyFF,YACE,SAAA,CAAA,CCpFA,6FDyFF,YACE,SAAA,CAAA,CCpFA,gEDyFF,YACE,SAAA,CAAA,CCpFA,gEDyFF,YACE,SAAA,CAAA,CCpFA,gEDyFF,YACE,SAAA,CAAA,CAMA,YACE,aAzIU,CEGhB,mBACE,cAAA,CACA,YAAA,CACA,yBAAA,CACA,sBAAA,CACA,eAAA,CACA,8BAAA,CAGF,cACE,YAAA,CACA,kBAAA,CACA,6BAAA,CACA,kBAAA,CACA,kBAAA,CACA,oBAAA,CACA,4BAAA,CACA,SAAA,CACA,WAAA,CACA,iBAAA,CACA,iBAAA,CAGF,WACE,YAAA,CACA,kBAAA,CACA,4BAAA,CACA,aAAA,CACA,iBAAA,CACA,UAAA,CACA,cAAA,CAGF,SACE,YAAA,CACA,yBAAA,CACA,wBFxCqB,CEyCrB,gBAAA,CACA,aAAA,CACA,aAAA,CACA,eAAA,CACA,kBAAA,CAGF,YACE,YAAA,CACA,kBAAA,CACA,SAAA,CACA,WAAA,CACA,4BAAA,CACA,eAAA,CAGF,cACE,iBAAA,CACA,gBAAA,CACA,SAAA,CAGF,eACE,cAAA,CACA,iBAAA,CACA,gBAAA,CACA,aFlEc,CEqEhB,aACE,aFpEoB,CEqEpB,SAAA,CACA,gBAAA,CACA,WAAA,CAGF,QACE,aAAA,CAGF,WACE,aF/EoB,CEgFpB,SAAA,CACA,WAAA,CACA,eAAA,CACA,cAAA,CACA,eAAA,CAGF,aACE,cAAA,CACA,aFxFyB,CEyFzB,eAAA,CACA,eAAA,CACA,YAAA,CACA,kBAAA,CACA,4BAAA,CAGF,YACE,UAAA,CAGF,YACE,aFpGqB,CEuGvB,cACE,SAAA,CACA,WAAA,CACA,eAAA,CACA,aAAA,CAGF,eACE,aAAA,CACA,WAAA,CACA,YAAA,CACA,WAAA,CAGF,QACE,aA3Ha,CA8Hf,UACE,aA9He,CAiIjB,SACE,aAjIc,CDHZ,2CCwIF,cACE,aAAA,CACA,aAAA,CAAA,CD9HA,kECmIF,cACE,aAAA,CACA,aAAA,CAAA,CD/HA,iECoIF,cACE,aAAA,CACA,aAAA,CACA,yBAAA,CAEF,SACE,aAAA,CACA,aAAA,CAAA,CDrIA,6FC0IF,cACE,aAAA,CACA,aAAA,CACA,yBAAA,CAEF,cACE,SAAA,CAAA,CD1IA,gEC+IF,cACE,cAAA,CACA,cAAA,CACA,yBAAA,CAEF,SACE,aAAA,CACA,aAAA,CAEF,cACE,SAAA,CAAA,CDnJA,gECwJF,cACE,cAAA,CACA,cAAA,CACA,yBAAA,CAEF,SACE,aAAA,CACA,aAAA,CAEF,cACE,SAAA,CAAA,CD5JA,gECiKF,cACE,cAAA,CACA,cAAA,CACA,yBAAA,CAEF,SACE,aAAA,CACA,aAAA,CAEF,cACE,SAAA,CAAA",sourcesContent:["@import 'layouts';\n\n$page-background-color: cornflowerblue;\n$box-background-color: whitesmoke;\n$heading-color: dodgerblue;\n\n$standard-text-color: dimgrey;\n$standard-text-color-dark: darkslategrey;\n$highlight-text-color: cornflowerblue;\n\nhtml,\nbody {\n  margin: 0;\n  padding: 0;\n  font-size: 16px;\n  font-family: 'Chivo', sans-serif;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: $page-background-color;\n}\n\n.full-width {\n  width: 65%;\n  margin: auto;\n  margin-top: 0;\n  background-color: $box-background-color;\n  border-radius: 0 0 2% 2%;\n  padding: 1%;\n  margin-bottom: 2%;\n  font-weight: 400;\n}\n\nnav {\n  text-align: center;\n  margin-top: 2em;\n\n  a {\n    text-decoration: none;\n    outline: none;\n    color: $standard-text-color;\n    padding: 1%;\n  }\n}\n\n.key-grid {\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr;\n  grid-column-gap: 1%;\n  align-items: center;\n  justify-items: center;\n  justify-content: space-evenly;\n  text-align: center;\n  margin-top: 1em;\n}\n\n.hidden {\n  position: absolute;\n  overflow: hidden;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  width: 1px;\n  margin: -1px;\n  padding: 0;\n  border: 0;\n}\n\n.heading {\n  text-align: center;\n  font-weight: 400;\n  margin-bottom: 0;\n  color: $heading-color;\n}\n\n.profile-text {\n  color: $standard-text-color;\n  min-width: 80%;\n  max-width: 80%;\n  margin: auto;\n  text-align: left;\n}\n\n@include respond(widescreen) {\n  .full-width {\n    width: 45%;\n  }\n  .profile-text {\n    min-width: 60%;\n    max-width: 60%;\n  }\n}\n\n@include respond(desktop) {\n  .profile-text {\n    min-width: 60%;\n    max-width: 60%;\n  }\n}\n\n@include respond(laptop) {\n  .full-width {\n    width: 90%;\n  }\n  .profile-text {\n    min-width: 60%;\n    max-width: 60%;\n  }\n}\n\n@include respond(tablet) {\n  .full-width {\n    width: 75%;\n  }\n}\n\n@include respond(tabletLandscape) {\n  .full-width {\n    width: 90%;\n  }\n}\n\n@include respond(mobileLarge) {\n  .full-width {\n    width: 95%;\n  }\n}\n\n@include respond(mobileSmall) {\n  .full-width {\n    width: 95%;\n  }\n}\n\n@include respond(mobileTiny) {\n  .full-width {\n    width: 90%;\n  }\n}\n\n@include feature(hover) {\n  nav {\n    a:hover {\n      color: $heading-color;\n    }\n  }\n}\n","@mixin respond($breakpoint) {\n  @if $breakpoint==widescreen {\n    @media only screen and (min-width: 2300px) {\n      @content;\n    }\n  }\n\n  @if $breakpoint==desktop {\n    @media only screen and (min-width: 1281px) {\n      @content;\n    }\n  }\n\n  @if $breakpoint==laptop {\n    @media only screen and (min-width: 1025px) and (max-width: 1280px) {\n      @content;\n    }\n  }\n\n  @if $breakpoint==tablet {\n    @media only screen and (min-width: 768px) and (max-width: 1024px) {\n      @content;\n    }\n  }\n\n  @if $breakpoint==tabletLandscape {\n    @media only screen and (min-width: 768px) and (max-width: 1024px) and (orientation: landscape) {\n      @content;\n    }\n  }\n\n  @if $breakpoint==mobileLarge {\n    @media only screen and (min-width: 481px) and (max-width: 767px) {\n      @content;\n    }\n  }\n\n  @if $breakpoint==mobileSmall {\n    @media only screen and (min-width: 320px) and (max-width: 480px) {\n      @content;\n    }\n  }\n\n  @if $breakpoint==mobileTiny {\n    @media only screen and (min-width: 320px) and (max-width: 401px) {\n      @content;\n    }\n  }\n}\n\n@mixin feature($feature) {\n  @if $feature==hover {\n    @content;\n  }\n}\n","@use 'index';\n@import 'layouts';\n\n$active-color: #2dc937;\n$archived-color: #e7b416;\n$retired-color: darkgray;\n\n.main-grid-project {\n  margin-top: 0em;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr;\n  grid-row-gap: 1%;\n  grid-template-areas: 'projects';\n}\n\n.project-grid {\n  display: grid;\n  grid-area: projects;\n  grid-template-columns: 1fr 1fr;\n  grid-column-gap: 1%;\n  align-items: center;\n  justify-items: center;\n  justify-content: space-evenly;\n  width: 80%;\n  margin: auto;\n  text-align: center;\n  margin-bottom: 1em;\n}\n\n.key-items {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  color: darkslategrey;\n  text-align: center;\n  width: 100%;\n  margin-top: 1em;\n}\n\n.project {\n  display: grid;\n  grid-template-columns: 1fr;\n  background-color: index.$box-background-color;\n  border-radius: 2%;\n  min-width: 95%;\n  max-width: 95%;\n  margin-top: 20px;\n  align-self: stretch;\n}\n\n.title-line {\n  display: flex;\n  flex-direction: row;\n  width: 90%;\n  margin: auto;\n  justify-content: space-around;\n  margin-top: 20px;\n}\n\n.status-light {\n  margin-right: auto;\n  font-size: larger;\n  width: 10%;\n}\n\n.project-title {\n  font-size: 150%;\n  margin-right: auto;\n  margin-left: auto;\n  color: index.$heading-color;\n}\n\n.description {\n  color: index.$standard-text-color;\n  width: 80%;\n  font-size: larger;\n  margin: auto;\n}\n\n.detail {\n  font-size: 90%;\n}\n\n.tech-used {\n  color: index.$standard-text-color;\n  width: 70%;\n  margin: auto;\n  text-align: left;\n  font-size: 100%;\n  font-weight: 400;\n}\n\n.status-line {\n  align-self: end;\n  color: index.$standard-text-color-dark;\n  font-size: large;\n  margin-top: 20px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n}\n\n.link-image {\n  width: 26px;\n}\n\n.uses-title {\n  color: index.$highlight-text-color;\n}\n\n.feature-list {\n  width: 50%;\n  margin: auto;\n  text-align: left;\n  font-size: 90%;\n}\n\n.project-image {\n  max-width: 50%;\n  height: auto;\n  padding: 20px;\n  margin: auto;\n}\n\n.active {\n  color: $active-color;\n}\n\n.archived {\n  color: $archived-color;\n}\n\n.retired {\n  color: $retired-color;\n}\n\n@include respond(widescreen) {\n  .project-grid {\n    min-width: 50%;\n    max-width: 50%;\n  }\n}\n\n@include respond(laptop) {\n  .project-grid {\n    min-width: 95%;\n    max-width: 95%;\n  }\n}\n\n@include respond(tablet) {\n  .project-grid {\n    min-width: 95%;\n    max-width: 95%;\n    grid-template-columns: 1fr;\n  }\n  .project {\n    min-width: 80%;\n    max-width: 80%;\n  }\n}\n\n@include respond(tabletLandscape) {\n  .project-grid {\n    min-width: 95%;\n    max-width: 95%;\n    grid-template-columns: 1fr;\n  }\n  .feature-list {\n    width: 80%;\n  }\n}\n\n@include respond(mobileLarge) {\n  .project-grid {\n    min-width: 100%;\n    max-width: 100%;\n    grid-template-columns: 1fr;\n  }\n  .project {\n    min-width: 95%;\n    max-width: 95%;\n  }\n  .feature-list {\n    width: 70%;\n  }\n}\n\n@include respond(mobileSmall) {\n  .project-grid {\n    min-width: 100%;\n    max-width: 100%;\n    grid-template-columns: 1fr;\n  }\n  .project {\n    min-width: 95%;\n    max-width: 95%;\n  }\n  .feature-list {\n    width: 70%;\n  }\n}\n\n@include respond(mobileTiny) {\n  .project-grid {\n    min-width: 100%;\n    max-width: 100%;\n    grid-template-columns: 1fr;\n  }\n  .project {\n    min-width: 90%;\n    max-width: 90%;\n  }\n  .feature-list {\n    width: 80%;\n  }\n}\n"],sourceRoot:""}]);const A=r},673:(n,e,t)=>{"use strict";t.d(e,{Z:()=>A});var i=t(15),a=t.n(i),o=t(645),r=t.n(o)()(a());r.push([n.id,'html,body{margin:0;padding:0;font-size:16px;font-family:"Chivo",sans-serif;font-family:"Source Sans Pro",sans-serif;background-color:#6495ed}.full-width{width:65%;margin:auto;margin-top:0;background-color:#f5f5f5;border-radius:0 0 2% 2%;padding:1%;margin-bottom:2%;font-weight:400}nav{text-align:center;margin-top:2em}nav a{text-decoration:none;outline:none;color:dimgray;padding:1%}.key-grid{display:grid;grid-template-columns:1fr;grid-template-rows:1fr;grid-column-gap:1%;align-items:center;justify-items:center;justify-content:space-evenly;text-align:center;margin-top:1em}.hidden{position:absolute;overflow:hidden;clip:rect(0 0 0 0);height:1px;width:1px;margin:-1px;padding:0;border:0}.heading{text-align:center;font-weight:400;margin-bottom:0;color:#1e90ff}.profile-text{color:dimgray;min-width:80%;max-width:80%;margin:auto;text-align:left}@media only screen and (min-width: 2300px){.full-width{width:45%}.profile-text{min-width:60%;max-width:60%}}@media only screen and (min-width: 1281px){.profile-text{min-width:60%;max-width:60%}}@media only screen and (min-width: 1025px)and (max-width: 1280px){.full-width{width:90%}.profile-text{min-width:60%;max-width:60%}}@media only screen and (min-width: 768px)and (max-width: 1024px){.full-width{width:75%}}@media only screen and (min-width: 768px)and (max-width: 1024px)and (orientation: landscape){.full-width{width:90%}}@media only screen and (min-width: 481px)and (max-width: 767px){.full-width{width:95%}}@media only screen and (min-width: 320px)and (max-width: 480px){.full-width{width:95%}}@media only screen and (min-width: 320px)and (max-width: 401px){.full-width{width:90%}}nav a:hover{color:#1e90ff}.search-form{display:flex;flex-direction:column;align-content:space-around;width:90%;height:auto;margin:auto;text-align:center}#search-bar{width:50%;padding:20px;font-size:1.15em;margin:auto;display:block;margin-bottom:1.15em;color:#6495ed;border-radius:2%;border:none;text-decoration:none}.clear-button{text-decoration:none;padding:5px;font-size:large;border:none;color:tomato;background-color:#f5f5f5;-webkit-appearance:none;border-radius:5px;margin:auto}@media only screen and (min-width: 320px)and (max-width: 480px){#search-bar{width:75%;margin-top:1em}}@media only screen and (min-width: 320px)and (max-width: 401px){#search-bar{width:75%;margin-top:1em}}',"",{version:3,sources:["webpack://./src/scss/index.scss","webpack://./src/scss/_layouts.scss","webpack://./src/scss/search.scss"],names:[],mappings:"AAUA,UAEE,QAAA,CACA,SAAA,CACA,cAAA,CACA,8BAAA,CACA,wCAAA,CACA,wBAfsB,CAkBxB,YACE,SAAA,CACA,WAAA,CACA,YAAA,CACA,wBArBqB,CAsBrB,uBAAA,CACA,UAAA,CACA,gBAAA,CACA,eAAA,CAGF,IACE,iBAAA,CACA,cAAA,CAEA,MACE,oBAAA,CACA,YAAA,CACA,aAhCkB,CAiClB,UAAA,CAIJ,UACE,YAAA,CACA,yBAAA,CACA,sBAAA,CACA,kBAAA,CACA,kBAAA,CACA,oBAAA,CACA,4BAAA,CACA,iBAAA,CACA,cAAA,CAGF,QACE,iBAAA,CACA,eAAA,CACA,kBAAA,CACA,UAAA,CACA,SAAA,CACA,WAAA,CACA,SAAA,CACA,QAAA,CAGF,SACE,iBAAA,CACA,eAAA,CACA,eAAA,CACA,aAlEc,CAqEhB,cACE,aApEoB,CAqEpB,aAAA,CACA,aAAA,CACA,WAAA,CACA,eAAA,CC5EE,2CDgFF,YACE,SAAA,CAEF,cACE,aAAA,CACA,aAAA,CAAA,CC/EA,2CDoFF,cACE,aAAA,CACA,aAAA,CAAA,CChFA,kEDqFF,YACE,SAAA,CAEF,cACE,aAAA,CACA,aAAA,CAAA,CCpFA,iEDyFF,YACE,SAAA,CAAA,CCpFA,6FDyFF,YACE,SAAA,CAAA,CCpFA,gEDyFF,YACE,SAAA,CAAA,CCpFA,gEDyFF,YACE,SAAA,CAAA,CCpFA,gEDyFF,YACE,SAAA,CAAA,CAMA,YACE,aAzIU,CEChB,aACE,YAAA,CACA,qBAAA,CACA,0BAAA,CACA,SAAA,CACA,WAAA,CACA,WAAA,CACA,iBAAA,CAGF,YACE,SAAA,CACA,YAAA,CACA,gBAAA,CACA,WAAA,CACA,aAAA,CACA,oBAAA,CACA,aFdqB,CEerB,gBAAA,CACA,WAAA,CACA,oBAAA,CAGF,cACE,oBAAA,CACA,WAAA,CACA,eAAA,CACA,WAAA,CACA,YA9BiB,CA+BjB,wBF/BqB,CEgCrB,uBAAA,CACA,iBAAA,CACA,WAAA,CDCE,gECGF,YACE,SAAA,CACA,cAAA,CAAA,CDCA,gECIF,YACE,SAAA,CACA,cAAA,CAAA",sourcesContent:["@import 'layouts';\n\n$page-background-color: cornflowerblue;\n$box-background-color: whitesmoke;\n$heading-color: dodgerblue;\n\n$standard-text-color: dimgrey;\n$standard-text-color-dark: darkslategrey;\n$highlight-text-color: cornflowerblue;\n\nhtml,\nbody {\n  margin: 0;\n  padding: 0;\n  font-size: 16px;\n  font-family: 'Chivo', sans-serif;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: $page-background-color;\n}\n\n.full-width {\n  width: 65%;\n  margin: auto;\n  margin-top: 0;\n  background-color: $box-background-color;\n  border-radius: 0 0 2% 2%;\n  padding: 1%;\n  margin-bottom: 2%;\n  font-weight: 400;\n}\n\nnav {\n  text-align: center;\n  margin-top: 2em;\n\n  a {\n    text-decoration: none;\n    outline: none;\n    color: $standard-text-color;\n    padding: 1%;\n  }\n}\n\n.key-grid {\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr;\n  grid-column-gap: 1%;\n  align-items: center;\n  justify-items: center;\n  justify-content: space-evenly;\n  text-align: center;\n  margin-top: 1em;\n}\n\n.hidden {\n  position: absolute;\n  overflow: hidden;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  width: 1px;\n  margin: -1px;\n  padding: 0;\n  border: 0;\n}\n\n.heading {\n  text-align: center;\n  font-weight: 400;\n  margin-bottom: 0;\n  color: $heading-color;\n}\n\n.profile-text {\n  color: $standard-text-color;\n  min-width: 80%;\n  max-width: 80%;\n  margin: auto;\n  text-align: left;\n}\n\n@include respond(widescreen) {\n  .full-width {\n    width: 45%;\n  }\n  .profile-text {\n    min-width: 60%;\n    max-width: 60%;\n  }\n}\n\n@include respond(desktop) {\n  .profile-text {\n    min-width: 60%;\n    max-width: 60%;\n  }\n}\n\n@include respond(laptop) {\n  .full-width {\n    width: 90%;\n  }\n  .profile-text {\n    min-width: 60%;\n    max-width: 60%;\n  }\n}\n\n@include respond(tablet) {\n  .full-width {\n    width: 75%;\n  }\n}\n\n@include respond(tabletLandscape) {\n  .full-width {\n    width: 90%;\n  }\n}\n\n@include respond(mobileLarge) {\n  .full-width {\n    width: 95%;\n  }\n}\n\n@include respond(mobileSmall) {\n  .full-width {\n    width: 95%;\n  }\n}\n\n@include respond(mobileTiny) {\n  .full-width {\n    width: 90%;\n  }\n}\n\n@include feature(hover) {\n  nav {\n    a:hover {\n      color: $heading-color;\n    }\n  }\n}\n","@mixin respond($breakpoint) {\n  @if $breakpoint==widescreen {\n    @media only screen and (min-width: 2300px) {\n      @content;\n    }\n  }\n\n  @if $breakpoint==desktop {\n    @media only screen and (min-width: 1281px) {\n      @content;\n    }\n  }\n\n  @if $breakpoint==laptop {\n    @media only screen and (min-width: 1025px) and (max-width: 1280px) {\n      @content;\n    }\n  }\n\n  @if $breakpoint==tablet {\n    @media only screen and (min-width: 768px) and (max-width: 1024px) {\n      @content;\n    }\n  }\n\n  @if $breakpoint==tabletLandscape {\n    @media only screen and (min-width: 768px) and (max-width: 1024px) and (orientation: landscape) {\n      @content;\n    }\n  }\n\n  @if $breakpoint==mobileLarge {\n    @media only screen and (min-width: 481px) and (max-width: 767px) {\n      @content;\n    }\n  }\n\n  @if $breakpoint==mobileSmall {\n    @media only screen and (min-width: 320px) and (max-width: 480px) {\n      @content;\n    }\n  }\n\n  @if $breakpoint==mobileTiny {\n    @media only screen and (min-width: 320px) and (max-width: 401px) {\n      @content;\n    }\n  }\n}\n\n@mixin feature($feature) {\n  @if $feature==hover {\n    @content;\n  }\n}\n","@use 'index';\n@import 'layouts';\n\n$alert-text-color: tomato;\n\n.search-form {\n  display: flex;\n  flex-direction: column;\n  align-content: space-around;\n  width: 90%;\n  height: auto;\n  margin: auto;\n  text-align: center;\n}\n\n#search-bar {\n  width: 50%;\n  padding: 20px;\n  font-size: 1.15em;\n  margin: auto;\n  display: block;\n  margin-bottom: 1.15em;\n  color: index.$highlight-text-color;\n  border-radius: 2%;\n  border: none;\n  text-decoration: none;\n}\n\n.clear-button {\n  text-decoration: none;\n  padding: 5px;\n  font-size: large;\n  border: none;\n  color: $alert-text-color;\n  background-color: index.$box-background-color;\n  -webkit-appearance: none;\n  border-radius: 5px;\n  margin: auto;\n}\n\n@include respond(mobileSmall) {\n  #search-bar {\n    width: 75%;\n    margin-top: 1em;\n  }\n}\n\n@include respond(mobileTiny) {\n  #search-bar {\n    width: 75%;\n    margin-top: 1em;\n  }\n}\n"],sourceRoot:""}]);const A=r},645:n=>{"use strict";n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=n(e);return e[2]?"@media ".concat(e[2]," {").concat(t,"}"):t})).join("")},e.i=function(n,t,i){"string"==typeof n&&(n=[[null,n,""]]);var a={};if(i)for(var o=0;o<this.length;o++){var r=this[o][0];null!=r&&(a[r]=!0)}for(var A=0;A<n.length;A++){var d=[].concat(n[A]);i&&a[d[0]]||(t&&(d[2]?d[2]="".concat(t," and ").concat(d[2]):d[2]=t),e.push(d))}},e}},15:n=>{"use strict";function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,i=new Array(e);t<e;t++)i[t]=n[t];return i}n.exports=function(n){var t,i,a=(i=4,function(n){if(Array.isArray(n))return n}(t=n)||function(n,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n)){var t=[],i=!0,a=!1,o=void 0;try{for(var r,A=n[Symbol.iterator]();!(i=(r=A.next()).done)&&(t.push(r.value),!e||t.length!==e);i=!0);}catch(n){a=!0,o=n}finally{try{i||null==A.return||A.return()}finally{if(a)throw o}}return t}}(t,i)||function(n,t){if(n){if("string"==typeof n)return e(n,t);var i=Object.prototype.toString.call(n).slice(8,-1);return"Object"===i&&n.constructor&&(i=n.constructor.name),"Map"===i||"Set"===i?Array.from(n):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?e(n,t):void 0}}(t,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=a[1],r=a[3];if("function"==typeof btoa){var A=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),d="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(A),l="/*# ".concat(d," */"),s=r.sources.map((function(n){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(n," */")}));return[o].concat(s).concat([l]).join("\n")}return[o].join("\n")}},466:function(n){n.exports=function(){"use strict";var n=Object.prototype.toString,e=Array.isArray||function(e){return"[object Array]"===n.call(e)};function t(n){return"function"==typeof n}function i(n){return n.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")}function a(n,e){return null!=n&&"object"==typeof n&&e in n}var o=RegExp.prototype.test;var r=/\S/;function A(n){return!function(n,e){return o.call(n,e)}(r,n)}var d={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;","`":"&#x60;","=":"&#x3D;"};var l=/\s*/,s=/\s+/,c=/\s*=/,m=/\s*\}/,p=/#|\^|\/|>|\{|&|=|!/;function h(n){this.string=n,this.tail=n,this.pos=0}function u(n,e){this.view=n,this.cache={".":this.view},this.parent=e}function C(){this.templateCache={_cache:{},set:function(n,e){this._cache[n]=e},get:function(n){return this._cache[n]},clear:function(){this._cache={}}}}h.prototype.eos=function(){return""===this.tail},h.prototype.scan=function(n){var e=this.tail.match(n);if(!e||0!==e.index)return"";var t=e[0];return this.tail=this.tail.substring(t.length),this.pos+=t.length,t},h.prototype.scanUntil=function(n){var e,t=this.tail.search(n);switch(t){case-1:e=this.tail,this.tail="";break;case 0:e="";break;default:e=this.tail.substring(0,t),this.tail=this.tail.substring(t)}return this.pos+=e.length,e},u.prototype.push=function(n){return new u(n,this)},u.prototype.lookup=function(n){var e,i,o,r=this.cache;if(r.hasOwnProperty(n))e=r[n];else{for(var A,d,l,s=this,c=!1;s;){if(n.indexOf(".")>0)for(A=s.view,d=n.split("."),l=0;null!=A&&l<d.length;)l===d.length-1&&(c=a(A,d[l])||(i=A,o=d[l],null!=i&&"object"!=typeof i&&i.hasOwnProperty&&i.hasOwnProperty(o))),A=A[d[l++]];else A=s.view[n],c=a(s.view,n);if(c){e=A;break}s=s.parent}r[n]=e}return t(e)&&(e=e.call(this.view)),e},C.prototype.clearCache=function(){void 0!==this.templateCache&&this.templateCache.clear()},C.prototype.parse=function(n,t){var a=this.templateCache,o=n+":"+(t||g.tags).join(":"),r=void 0!==a,d=r?a.get(o):void 0;return null==d&&(d=function(n,t){if(!n)return[];var a,o,r,d=!1,u=[],C=[],f=[],w=!1,x=!1,y="",b=0;function v(){if(w&&!x)for(;f.length;)delete C[f.pop()];else f=[];w=!1,x=!1}function E(n){if("string"==typeof n&&(n=n.split(s,2)),!e(n)||2!==n.length)throw new Error("Invalid tags: "+n);a=new RegExp(i(n[0])+"\\s*"),o=new RegExp("\\s*"+i(n[1])),r=new RegExp("\\s*"+i("}"+n[1]))}E(t||g.tags);for(var k,B,F,S,j,$,L=new h(n);!L.eos();){if(k=L.pos,F=L.scanUntil(a))for(var D=0,I=F.length;D<I;++D)A(S=F.charAt(D))?(f.push(C.length),y+=S):(x=!0,d=!0,y+=" "),C.push(["text",S,k,k+1]),k+=1,"\n"===S&&(v(),y="",b=0,d=!1);if(!L.scan(a))break;if(w=!0,B=L.scan(p)||"name",L.scan(l),"="===B?(F=L.scanUntil(c),L.scan(c),L.scanUntil(o)):"{"===B?(F=L.scanUntil(r),L.scan(m),L.scanUntil(o),B="&"):F=L.scanUntil(o),!L.scan(o))throw new Error("Unclosed tag at "+L.pos);if(j=">"==B?[B,F,k,L.pos,y,b,d]:[B,F,k,L.pos],b++,C.push(j),"#"===B||"^"===B)u.push(j);else if("/"===B){if(!($=u.pop()))throw new Error('Unopened section "'+F+'" at '+k);if($[1]!==F)throw new Error('Unclosed section "'+$[1]+'" at '+k)}else"name"===B||"{"===B||"&"===B?x=!0:"="===B&&E(F)}if(v(),$=u.pop())throw new Error('Unclosed section "'+$[1]+'" at '+L.pos);return function(n){for(var e,t=[],i=t,a=[],o=0,r=n.length;o<r;++o)switch((e=n[o])[0]){case"#":case"^":i.push(e),a.push(e),i=e[4]=[];break;case"/":a.pop()[5]=e[2],i=a.length>0?a[a.length-1][4]:t;break;default:i.push(e)}return t}(function(n){for(var e,t,i=[],a=0,o=n.length;a<o;++a)(e=n[a])&&("text"===e[0]&&t&&"text"===t[0]?(t[1]+=e[1],t[3]=e[3]):(i.push(e),t=e));return i}(C))}(n,t),r&&a.set(o,d)),d},C.prototype.render=function(n,e,t,i){var a=this.getConfigTags(i),o=this.parse(n,a),r=e instanceof u?e:new u(e,void 0);return this.renderTokens(o,r,t,n,i)},C.prototype.renderTokens=function(n,e,t,i,a){for(var o,r,A,d="",l=0,s=n.length;l<s;++l)A=void 0,"#"===(r=(o=n[l])[0])?A=this.renderSection(o,e,t,i,a):"^"===r?A=this.renderInverted(o,e,t,i,a):">"===r?A=this.renderPartial(o,e,t,a):"&"===r?A=this.unescapedValue(o,e):"name"===r?A=this.escapedValue(o,e,a):"text"===r&&(A=this.rawValue(o)),void 0!==A&&(d+=A);return d},C.prototype.renderSection=function(n,i,a,o,r){var A=this,d="",l=i.lookup(n[1]);if(l){if(e(l))for(var s=0,c=l.length;s<c;++s)d+=this.renderTokens(n[4],i.push(l[s]),a,o,r);else if("object"==typeof l||"string"==typeof l||"number"==typeof l)d+=this.renderTokens(n[4],i.push(l),a,o,r);else if(t(l)){if("string"!=typeof o)throw new Error("Cannot use higher-order sections without the original template");null!=(l=l.call(i.view,o.slice(n[3],n[5]),(function(n){return A.render(n,i,a,r)})))&&(d+=l)}else d+=this.renderTokens(n[4],i,a,o,r);return d}},C.prototype.renderInverted=function(n,t,i,a,o){var r=t.lookup(n[1]);if(!r||e(r)&&0===r.length)return this.renderTokens(n[4],t,i,a,o)},C.prototype.indentPartial=function(n,e,t){for(var i=e.replace(/[^ \t]/g,""),a=n.split("\n"),o=0;o<a.length;o++)a[o].length&&(o>0||!t)&&(a[o]=i+a[o]);return a.join("\n")},C.prototype.renderPartial=function(n,e,i,a){if(i){var o=this.getConfigTags(a),r=t(i)?i(n[1]):i[n[1]];if(null!=r){var A=n[6],d=n[5],l=n[4],s=r;0==d&&l&&(s=this.indentPartial(r,l,A));var c=this.parse(s,o);return this.renderTokens(c,e,i,s,a)}}},C.prototype.unescapedValue=function(n,e){var t=e.lookup(n[1]);if(null!=t)return t},C.prototype.escapedValue=function(n,e,t){var i=this.getConfigEscape(t)||g.escape,a=e.lookup(n[1]);if(null!=a)return"number"==typeof a&&i===g.escape?String(a):i(a)},C.prototype.rawValue=function(n){return n[1]},C.prototype.getConfigTags=function(n){return e(n)?n:n&&"object"==typeof n?n.tags:void 0},C.prototype.getConfigEscape=function(n){return n&&"object"==typeof n&&!e(n)?n.escape:void 0};var g={name:"mustache.js",version:"4.1.0",tags:["{{","}}"],clearCache:void 0,escape:void 0,parse:void 0,render:void 0,Scanner:void 0,Context:void 0,Writer:void 0,set templateCache(n){f.templateCache=n},get templateCache(){return f.templateCache}},f=new C;return g.clearCache=function(){return f.clearCache()},g.parse=function(n,e){return f.parse(n,e)},g.render=function(n,t,i,a){if("string"!=typeof n)throw new TypeError('Invalid template! Template should be a "string" but "'+((e(o=n)?"array":typeof o)+'" was given as the first argument for mustache#render(template, view, partials)'));var o;return f.render(n,t,i,a)},g.escape=function(n){return String(n).replace(/[&<>"'`=\/]/g,(function(n){return d[n]}))},g.Scanner=h,g.Context=u,g.Writer=C,g}()},379:(n,e,t)=>{"use strict";var i,a=function(){var n={};return function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}n[e]=t}return n[e]}}(),o=[];function r(n){for(var e=-1,t=0;t<o.length;t++)if(o[t].identifier===n){e=t;break}return e}function A(n,e){for(var t={},i=[],a=0;a<n.length;a++){var A=n[a],d=e.base?A[0]+e.base:A[0],l=t[d]||0,s="".concat(d," ").concat(l);t[d]=l+1;var c=r(s),m={css:A[1],media:A[2],sourceMap:A[3]};-1!==c?(o[c].references++,o[c].updater(m)):o.push({identifier:s,updater:u(m,e),references:1}),i.push(s)}return i}function d(n){var e=document.createElement("style"),i=n.attributes||{};if(void 0===i.nonce){var o=t.nc;o&&(i.nonce=o)}if(Object.keys(i).forEach((function(n){e.setAttribute(n,i[n])})),"function"==typeof n.insert)n.insert(e);else{var r=a(n.insert||"head");if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(e)}return e}var l,s=(l=[],function(n,e){return l[n]=e,l.filter(Boolean).join("\n")});function c(n,e,t,i){var a=t?"":i.media?"@media ".concat(i.media," {").concat(i.css,"}"):i.css;if(n.styleSheet)n.styleSheet.cssText=s(e,a);else{var o=document.createTextNode(a),r=n.childNodes;r[e]&&n.removeChild(r[e]),r.length?n.insertBefore(o,r[e]):n.appendChild(o)}}function m(n,e,t){var i=t.css,a=t.media,o=t.sourceMap;if(a?n.setAttribute("media",a):n.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleSheet)n.styleSheet.cssText=i;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(i))}}var p=null,h=0;function u(n,e){var t,i,a;if(e.singleton){var o=h++;t=p||(p=d(e)),i=c.bind(null,t,o,!1),a=c.bind(null,t,o,!0)}else t=d(e),i=m.bind(null,t,e),a=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)};return i(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;i(n=e)}else a()}}n.exports=function(n,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===i&&(i=Boolean(window&&document&&document.all&&!window.atob)),i));var t=A(n=n||[],e);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var i=0;i<t.length;i++){var a=r(t[i]);o[a].references--}for(var d=A(n,e),l=0;l<t.length;l++){var s=r(t[l]);0===o[s].references&&(o[s].updater(),o.splice(s,1))}t=d}}}}},e={};function t(i){if(e[i])return e[i].exports;var a=e[i]={id:i,exports:{}};return n[i].call(a.exports,a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var i=e.getElementsByTagName("script");i.length&&(n=i[i.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),(()=>{"use strict";var n,e="Haskell",i="C",a="Python",o="JavaScript",r="CSS",A="HTML",d="Java",l="Hspec",s="Hlint",c="Ormolu",m="weeder",p="ghcid",h="GDB",u="cmocka",C="Valgrind",g="Flask",f="Flake8",w="Black",x="pytest",y="ESLint",b="Node.js",v="JUnit",E="JaCoCo",k="webpack",B="Babel",F="Sass",S="AWS",j="Lambda",$="API Gateway",L="DynamoDB",D="pre-commit",I="Prettier",Y="SQLite",U="Stack",G="Make",T="Poetry",P="Yarn",W="Maven",M="Travis CI",z="Codecov",O="DigitalOcean",q="NGINX",N="GitHub Actions",R="VS Code";function H(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}var J="active",Q="archived",V="retired",_={ci:!0,name:"succ",description:"Compiler for a subset of C",features:["Multi-pass compiler","Growing C support","x86-64 assembly","Robust error handling","Basic type enforcement"],languageList:[e],toolList:[l,s,c,m,p],buildList:[U,M,z],year:"2019",status:J},Z={ci:!0,name:"pyfunctory",description:"Pythonic implementations of functional programming concepts",detail:"Map, filter, reduce, and friends built from generator expressions and list comprehensions",languageList:[a],toolList:[x,f,w],buildList:[T,M,z],year:"2017",status:Q},X={ci:!1,name:"sudoku solver",altName:"sudoku-solver.online",description:"Sudoku solver website.",detail:"The solver itself is written in C, and then compiled to webassembly",languageList:[i,o,r,A],toolList:["WebAssembly"],buildList:["Emscripten"],year:"2018",status:V},K={ci:!1,name:"headlinewords.top",description:"Site tracking words used in news headlines.",detail:"Daily, weekly, and monthly trends from a range of sources, across multiple countries",languageList:[a,"SQL",r,A],toolList:[g,"Jinja2",Y],buildList:["pip",O,q],year:"2017",status:V},nn={ci:!1,name:"piptube",description:"Picture-in-picture wrapper for mpv and youtube-dl",features:["Video and audio","Play video URL","Play search result","Command line jukebox","Config file settings"],languageList:[a],toolList:["youtube-dl","mpv"],buildList:[T],year:"2017",status:Q},en={ci:!0,name:"self.site",ghAction:"deploy",altName:"jgthomas.github.io",description:"Portfolio website",detail:"Responsive site with just the bare-bones tech of the web",languageList:[o,r,A],toolList:["Grid","Flexbox","media queries","{{ mustache }}",y,I,F],buildList:[P,k,B,N,"GitHub Pages"],year:"2019",status:J},tn={ci:!0,name:"calcasm",description:"Command line calculator written in x86-64 assembly",detail:"All input, output, parsing, and calculation performed in pure assembly, with Linux syscalls",languageList:["x86-64 Assembly"],toolList:["as","ld",h],buildList:[G,M],year:"2018",status:Q},an={ci:!0,name:"draughts",altName:"DraughtsGame",description:"Desktop draughts application",features:["Computer player","Save and resume","Graphical mode","Text mode","Swap bewteen modes"],languageList:[d,"SQL"],toolList:["JavaFX",v,Y],buildList:[W,M],year:"2018",status:Q},on={ci:!0,name:"braingame.xyz",description:"Brain game website",detail:"Anagrams, word games, sudoku, and more to come",languageList:[a,o,r,A],toolList:["FastAPI","React","Docker",x,f,w,y,I,D],buildList:[T,P,M,z,"Docker Hub","AWS Elastic Beanstalk"],year:"2020",status:J},rn={ci:!0,name:"emulator",altName:"chipset_emulator",description:"Emulator for 4- and 8-bit chipsets",features:["Interactive shell","Run program from file","Custom assembly","Simple assembler","Step-through debugger"],languageList:[i],toolList:[u,h,C],buildList:[G,M],year:"2018",status:Q},An={ci:!0,ghAction:"tests",name:"jsoner",description:"JSON Validator",detail:"Built with ".concat("Megaparsec"),languageList:[e],toolList:[l,s,c,m,p],buildList:[U,N,z],year:"2020",status:J},dn={ci:!0,ghAction:"deploy",name:"foodApi",description:"Serverless backend for food app",features:["Food pantry record","Recipe book","Matches recipes to food","Suggests options","Alternate ingredients"],languageList:[o],toolList:[b,S,j,$,L,y,I],buildList:["npm",N,"Serverless Framework"],year:"2021",status:J},ln={ci:!0,name:"dish",description:"Docker clone",detail:"Container management non-solution",features:["Create new containers","Access and use containers","Manage containers"],languageList:["Go"],toolList:["Go Tooling"],buildList:[G,M],year:"2019",status:Q},sn={ci:!1,name:"playwords.xyz",description:"Word game website",features:["Solve anagrams","Word squares","Scrabble rack"],languageList:[a,o,r,A],toolList:[g],buildList:["pip",O,q],year:"2017",status:V},cn=function(n){var e;n.image=(e=n.name,"src/img/".concat(e.replaceAll(" ","_"),".png")),n.languages=n.languageList.join(", "),n.tools=n.toolList.join(", "),n.build=n.buildList.join(", "),n.midlink=function(n){if(!n.ci)return"";var e=n.altName?n.altName:n.name;return n.ghAction?"https://github.com/jgthomas/".concat(e,"/workflows/").concat(n.ghAction,"/badge.svg"):"https://travis-ci.com/jgthomas/".concat(e,".svg?branch=master")}(n),n.github=function(n){var e=n.altName?n.altName:n.name;return"https://github.com/jgthomas/".concat(e)}(n),n.octocat="https://raw.githubusercontent.com/github/explore/78df643247d429f6cc873026c0622819ad797942/topics/github/github.png"};cn(_),cn(on),cn(en),cn(an),cn(rn),cn(tn),cn(nn),cn(Z),cn(X),cn(K),cn(An),cn(dn),cn(ln),cn(sn);var mn,pn=(H(n={},_.name,_),H(n,dn.name,dn),H(n,An.name,An),H(n,en.name,en),H(n,ln.name,ln),H(n,an.name,an),H(n,tn.name,tn),H(n,rn.name,rn),H(n,nn.name,nn),H(n,X.name,X),H(n,sn.name,sn),H(n,K.name,K),n),hn={projects:Object.keys(pn).map((function(n){return pn[n]}))},un={siteTitle:"The Late Developer",homePage:"index.html",homeTitle:"Projects",mePage:"me.html",meTitle:"Me",cvLink:"https://www.dropbox.com/s/p7sr20jl648jv1k/CV.pdf?dl=0",cvTitle:"CV"};function Cn(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}var gn,fn="36px",wn="src/img",xn={organisation:"Self-teaching",alt:"Self-teaching",width:fn,image:"".concat(wn,"/laptop_man.png"),startDate:"2017",endDate:"forever",role:"Projects, Project, Projects!"},yn={organisation:"City of Edinburgh Council",alt:"Edinbrugh Council",width:fn,image:"".concat(wn,"/edinburgh_council.jpg"),startDate:"2017",endDate:"2018",role:"Database and VBA refactor"},bn={organisation:"University of Birmingham",alt:"UoB",width:fn,image:"".concat(wn,"/smallBham.png"),startDate:"2018",endDate:"2019",role:"MSc in Computer Science"},vn={organisation:"codebar.io",alt:"codebar",width:fn,image:"".concat(wn,"/codebar.png"),startDate:"2019",endDate:"2020",role:"Programming Coach"},En={organisation:"Bluetel",alt:"Bluetel",width:fn,image:"".concat(wn,"/bluetel_solutions.png"),startDate:"2019",endDate:"present",role:"Software Engineer"},kn=(Cn(mn={},En.organisation,En),Cn(mn,vn.organisation,vn),Cn(mn,bn.organisation,bn),Cn(mn,yn.organisation,yn),Cn(mn,xn.organisation,xn),mn),Bn={experience:Object.keys(kn).map((function(n){return kn[n]}))};function Fn(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}var Sn="36px",jn="https://raw.githubusercontent.com/devicons/devicon/master/icons",$n={name:a,images:[{alt:a,width:Sn,icon:"".concat(jn,"/python/python-original.svg")}],text:"My first language! I started using <strong>".concat(a,"</strong> during my PhD, running multi-agent evolutionary simulations. This might sound impressive, but\n  looking back at that code now, I can tell you it is <em>not</em>. Still, there's something about the beauty of well-written Python code, it can flow\n  almost like sentences in a natural language. Also, is there anything that <em>isn't</em> in the standard library? Just wish it was statically typed,\n  once I had a taste of that, its been hard to go back."),tooling:[T,x,w,f,D,R]},Ln={name:i,images:[{alt:i,width:Sn,icon:"".concat(jn,"/c/c-original.svg")}],text:"I tried to learn algorithms and data structures in Python, but Python just does too much for you. What was the point of this 'linked list',\n  if the Python list was right there? So I switched to <strong>".concat(i,"</strong>, which forced me to grapple with pointers and manual memory management, and to\n  implement things myself that are just part of the standard libraries of other languages. I don't expect I'll ever work in C, but\n  using it has deeply enriched my understanding of other languages and programming in general."),tooling:["GCC",h,C,u,G,"Vim"]},Dn={name:"web",images:[{alt:A,width:Sn,icon:"".concat(jn,"/html5/html5-original.svg")},{alt:r,width:Sn,icon:"".concat(jn,"/css3/css3-original.svg")},{alt:o,width:Sn,icon:"".concat(jn,"/javascript/javascript-original.svg")}],text:"In addition to allowing me to make things other people can <em>see</em>, working with\n  <strong>web</strong> tech really opened up 'API thinking' for me, as a complement to the 'algorithmic thinking' of much of my previous explorations.\n  In doing so, it taught me that it was not 'cheating' if I didn't write it all myself, and that enormously powerful things can be created\n  by making smart use existing tools and services, linked and chained together.",tooling:[P,y,I,k,B,F,R]},In={name:d,images:[{alt:d,width:Sn,icon:"".concat(jn,"/java/java-original.svg")}],text:"The major language of my computer science degree. It still feels slightly absurd that <em>everything</em> has to be a class, and do I really\n  need all that for 'Hello, World!'? But it was this verbose rigidity that really helped drill object-oriented thinking into my brain. More than\n  any other language, <strong>".concat(d,"</strong> made me think consciously about how to create and expose abstractions.\n  Grasping the beauty and power of interfaces was also a pivotal moment in my developement, so I forgive the verbosity in full."),tooling:[W,v,E,"IntelliJ"]},Yn={name:e,images:[{alt:e,width:Sn,icon:"".concat(jn,"/haskell/haskell-original.svg")}],text:"Learning <strong>".concat(e,"</strong> opened up the entire mental landscape of functional programming for me.\n  It is also the language in which I've written my most significant project to date. Don't really do 'favourites', but if I did, Haskell would be my favourite language.\n  The type system is amazing. Sum types and pattern matching are beautiful&#8212;as is the ability to control how much 'power' a function has, from a simple pure function,\n  to selecting from the hierarchy of functor, applicative, and <strike>burrito</strike> monad."),tooling:[U,l,s,c,p,"Vim"]},Un=function(n){n.tools=n.tooling.join(", ")};Un($n),Un(Ln),Un(Dn),Un(In),Un(Yn);var Gn=(Fn(gn={},$n.name,$n),Fn(gn,Ln.name,Ln),Fn(gn,Dn.name,Dn),Fn(gn,In.name,In),Fn(gn,Yn.name,Yn),gn),Tn={languages:Object.keys(Gn).map((function(n){return Gn[n]}))},Pn=t(466),Wn=t.n(Pn),Mn=function(n,e,t){fetch("".concat("./src/templates","/").concat(n).concat(".mst")).then((function(n){return n.text()})).then((function(n){var i=Wn().render(n,e);document.getElementById(t).innerHTML=i})).catch((function(e){return console.log("Unable to load template: ".concat(n,". Error: ").concat(e.message))}))};function zn(n,e){var t;if("undefined"==typeof Symbol||null==n[Symbol.iterator]){if(Array.isArray(n)||(t=function(n,e){if(n){if("string"==typeof n)return On(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?On(n,e):void 0}}(n))||e&&n&&"number"==typeof n.length){t&&(n=t);var i=0,a=function(){};return{s:a,n:function(){return i>=n.length?{done:!0}:{done:!1,value:n[i++]}},e:function(n){throw n},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,r=!0,A=!1;return{s:function(){t=n[Symbol.iterator]()},n:function(){var n=t.next();return r=n.done,n},e:function(n){A=!0,o=n},f:function(){try{r||null==t.return||t.return()}finally{if(A)throw o}}}}function On(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,i=new Array(e);t<e;t++)i[t]=n[t];return i}document.addEventListener("DOMContentLoaded",(function(){document.getElementById("project-page")&&(Mn("header",un,"site-header"),Mn("project",hn,"all-projects")),document.getElementById("me-page")&&(Mn("header",un,"site-header"),Mn("experience",Bn,"experience"),Mn("language",Tn,"languages"))}));var qn=function(n){n.classList.remove("hidden")},Nn=function(n){n.classList.add("hidden")},Rn=function(){var n=document.getElementById("clear-button");Nn(n)},Hn=function(){var n=document.getElementById("clear-button");qn(n)},Jn=function(){var n,e=zn(document.getElementsByClassName("project"));try{for(e.s();!(n=e.n()).done;){var t=n.value;qn(t)}}catch(n){e.e(n)}finally{e.f()}};document.addEventListener("DOMContentLoaded",(function(){if(document.getElementById("project-page")){document.getElementById("search-form").addEventListener("submit",(function(n){n.preventDefault(),n.stopPropagation()}));var n=document.getElementById("search-bar");n.addEventListener("input",(function(){var e=n.value.toLowerCase().trim();e?function(n){return n===J||n===Q||n===V}(e)?(Hn(),function(n){var e,t,i=zn(document.getElementsByClassName("project"));try{for(i.s();!(e=i.n()).done;){var a=e.value;t=a.id,pn[t].status===n?qn(a):Nn(a)}}catch(n){i.e(n)}finally{i.f()}}(e)):(Hn(),function(n){var e,t,i,a,o,r=zn(document.getElementsByClassName("project"));try{for(r.s();!(e=r.n()).done;){var A=e.value;(t=A.id,i=void 0,a=void 0,o=void 0,i=pn[t],a=i.detail?i.detail:"",o=i.features?i.features.join(", "):"","".concat(i.name,"\n            ").concat(i.description,"\n            ").concat(a,"\n            ").concat(o,"\n            ").concat(i.languages,"\n            ").concat(i.tools,"\n            ").concat(i.build,"\n            ").concat(i.year,"\n            ").concat(i.status,"\n           ").toLowerCase()).indexOf(n)>-1?qn(A):Nn(A)}}catch(n){r.e(n)}finally{r.f()}}(e)):(Jn(),Rn())})),document.getElementById("clear-button").addEventListener("click",(function(){Jn(),Rn()}))}}));var Qn=t(379),Vn=t.n(Qn),_n=t(44);Vn()(_n.Z,{insert:"head",singleton:!1}),_n.Z.locals;var Zn=t(984);Vn()(Zn.Z,{insert:"head",singleton:!1}),Zn.Z.locals;var Xn=t(673);Vn()(Xn.Z,{insert:"head",singleton:!1}),Xn.Z.locals;var Kn=t(324);Vn()(Kn.Z,{insert:"head",singleton:!1}),Kn.Z.locals,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,